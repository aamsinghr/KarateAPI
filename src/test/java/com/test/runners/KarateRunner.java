package com.test.runners;

import com.intuit.karate.Results;
import com.intuit.karate.Runner;
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;
import net.masterthought.cucumber.Configuration;
import net.masterthought.cucumber.ReportBuilder;
import org.apache.commons.io.FileUtils;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class KarateRunner {

	@Test
	void testParallel() {
		List<String> tags = Arrays.asList("@all");
		List<String> features = Arrays.asList("classpath:tests");
		String karateOutputPath = "target/karate-reports";
		Results results = Runner.path(features)
				.tags(tags)
				.outputCucumberJson(true) //JUnit XML reports
				.outputJunitXml(true) //Cucumber JSON reports
				//.reportDir(karateOutputPath) default path target/karate-reports
				.parallel(5);
		generateReport(karateOutputPath); //parameter path where karate reports(.json or .xml are placed)
		assertTrue(results.getFailCount() == 0, results.getErrorMessages());
	}

	//Generates cucumber-html report using Cucumber JSON reports generated by outputCucumberJson(true)
	public static void generateReport(String karateOutputPath) {
		Collection<File> jsonFiles = FileUtils.listFiles(new File(karateOutputPath), new String[] {"json"}, true);
		List<String> jsonPaths = new ArrayList<>(jsonFiles.size());
		jsonFiles.forEach(file -> jsonPaths.add(file.getAbsolutePath()));
		Configuration config = new Configuration(new File("target"), "KarateAPI");
		ReportBuilder reportBuilder = new ReportBuilder(jsonPaths, config);
		reportBuilder.generateReports();
	}
	
}